[{"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\index.js":"1","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\App.js":"2","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\styles\\GlobalStyle.js":"3","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\context\\globalContext.js":"4","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\styles\\Layouts.js":"5","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Orb\\Orb.js":"6","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Navigation\\Navigation.js":"7","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Dashboard\\Dashboard.js":"8","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Login\\login.js":"9","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Expenses\\Expenses.js":"10","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Income\\Income.js":"11","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Registration\\Registration.js":"12","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Expenses\\ExpenseForm.js":"13","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\useWindowSize.js":"14","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\menuItems.js":"15","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\History\\History.js":"16","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\Icons.js":"17","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Chart\\Chart.js":"18","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Button\\Button.js":"19","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Predict\\Prediction.js":"20","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\IncomeItem\\IncomeItem.js":"21","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Form\\Form.js":"22","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\dateFormat.js":"23","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\common\\Header.js":"24","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\homepage\\notification.js":"25","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\homepage\\dashboard_card.js":"26","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\common\\Notification.jsx":"27","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\homepage\\homepage.js":"28"},{"size":424,"mtime":1712388887596,"results":"29","hashOfConfig":"30"},{"size":1914,"mtime":1712395074367,"results":"31","hashOfConfig":"30"},{"size":1291,"mtime":1712388887596,"results":"32","hashOfConfig":"30"},{"size":4719,"mtime":1712388887549,"results":"33","hashOfConfig":"30"},{"size":280,"mtime":1712388887596,"results":"34","hashOfConfig":"30"},{"size":951,"mtime":1712388887549,"results":"35","hashOfConfig":"30"},{"size":3130,"mtime":1712388887549,"results":"36","hashOfConfig":"30"},{"size":5596,"mtime":1712388887534,"results":"37","hashOfConfig":"30"},{"size":3032,"mtime":1712388887549,"results":"38","hashOfConfig":"30"},{"size":2597,"mtime":1712388887549,"results":"39","hashOfConfig":"30"},{"size":2484,"mtime":1712388887549,"results":"40","hashOfConfig":"30"},{"size":4094,"mtime":1712388887549,"results":"41","hashOfConfig":"30"},{"size":4818,"mtime":1712388887549,"results":"42","hashOfConfig":"30"},{"size":513,"mtime":1712388887596,"results":"43","hashOfConfig":"30"},{"size":776,"mtime":1712393875944,"results":"44","hashOfConfig":"30"},{"size":1624,"mtime":1712388887549,"results":"45","hashOfConfig":"30"},{"size":1921,"mtime":1712388887596,"results":"46","hashOfConfig":"30"},{"size":1848,"mtime":1712388887534,"results":"47","hashOfConfig":"30"},{"size":685,"mtime":1712388887534,"results":"48","hashOfConfig":"30"},{"size":5843,"mtime":1712388887549,"results":"49","hashOfConfig":"30"},{"size":4804,"mtime":1712388887549,"results":"50","hashOfConfig":"30"},{"size":4777,"mtime":1712388887549,"results":"51","hashOfConfig":"30"},{"size":118,"mtime":1712388887596,"results":"52","hashOfConfig":"30"},{"size":1481,"mtime":1712392004806,"results":"53","hashOfConfig":"30"},{"size":1310,"mtime":1712390613729,"results":"54","hashOfConfig":"30"},{"size":2001,"mtime":1712390329569,"results":"55","hashOfConfig":"30"},{"size":388,"mtime":1712159231989,"results":"56","hashOfConfig":"30"},{"size":720,"mtime":1712394744150,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1jse2e7",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"61"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\App.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\styles\\GlobalStyle.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\context\\globalContext.js",["152","153","154","155","156","157","158"],[],"import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst BASE_URL = \"http://localhost:3006/api/v1/\";\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [jwt, setJwt] = useState(null)\r\n    const [monthlyincome, setMonthlyincome] = useState([])\r\n    const [monthlyexpense, setMonthlyexpense] = useState([])\r\n    const [predictedValue, setPredictedValue] = useState()\r\n\r\n    //calculate incomes\r\n    const register = async (userDetails) => {\r\n        const response = await axios.post(`${BASE_URL}register`, userDetails)\r\n        return(response.data)\r\n        // setError(response.data.message)\r\n        //  .catch((err) => {\r\n        //     setError(err.response.data.message)\r\n        // })\r\n      \r\n    }\r\n\r\n    const login = async (login_data) => {\r\n        const response = await axios.post(`${BASE_URL}login`, login_data)\r\n        \r\n        .catch((err) => {\r\n            setError(err.response.data.message)\r\n        })\r\n    }\r\n\r\n    const monthlyIncome = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-monthly-income`)\r\n        console.log(response.data)\r\n        setMonthlyincome(response.data)\r\n        \r\n    }\r\n\r\n    const monthlyExpense = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-monthly-expense`)\r\n        setMonthlyexpense(response.data)\r\n       \r\n    }\r\n\r\n    const getloggedInUser = async() => {\r\n        const response = await axios.get(`${BASE_URL}me`)\r\n        .catch((err) => {\r\n            setError(err.response.data.message)\r\n        })\r\n    }\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getIncomes()\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-incomes`)\r\n        setIncomes(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes()\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    //calculate incomes\r\n    const addExpense = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getExpenses()\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expenses`)\r\n        setExpenses(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n        getExpenses()\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalIncome = 0;\r\n        expenses.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n    const predict = async(test) => {\r\n        const response = await axios.post(`${BASE_URL}predict`, test)\r\n        setPredictedValue(response.data)\r\n           \r\n        return response\r\n    }\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            register,\r\n            login,\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError,\r\n            setJwt,\r\n            jwt,\r\n            predict,\r\n            monthlyExpense,\r\n            monthlyIncome,monthlyexpense,monthlyincome,\r\n            predictedValue\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () =>{\r\n    return useContext(GlobalContext)\r\n}","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\styles\\Layouts.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Orb\\Orb.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Navigation\\Navigation.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Dashboard\\Dashboard.js",["159"],[],"import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport History from '../../History/History';\r\n// import Prediction from '../Prediction/Prediction';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\n// import { dollar } from '../../utils/Icons';\r\nimport Chart from '../Chart/Chart';\r\nimport Prediction from '../Predict/Prediction';\r\n\r\nfunction Dashboard() {\r\n    const {totalExpenses,incomes, expenses, totalIncome, totalBalance, getIncomes, getExpenses } = useGlobalContext()\r\n\r\n    useEffect(() => {\r\n        getIncomes()\r\n        getExpenses()\r\n    }, [])\r\n\r\n    return (\r\n        <DashboardStyled>\r\n            <InnerLayout>\r\n                <h1>All Transactions</h1>\r\n                <div className=\"stats-con\">\r\n                    <div className=\"chart-con\">\r\n                        <Chart />\r\n                        <div className=\"amount-con\">\r\n                            <div className=\"income\">\r\n                                <h2>Total Income</h2>\r\n                                <p>\r\n                                    Rs {totalIncome()}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"expense\">\r\n                                <h2>Total Expense</h2>\r\n                                <p>\r\n                                    Rs {totalExpenses()}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"balance\">\r\n                                <h2>Total Balance</h2>\r\n                                <p>\r\n                                    Rs {totalBalance()}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <Prediction/>\r\n                    </div>\r\n                    <div className=\"history-con\">\r\n                        <History />\r\n                        <h2 className=\"salary-title\">Min <span>Salary</span>Max</h2>\r\n                        <div className=\"salary-item\">\r\n                            <p>\r\n                                Rs{Math.min(...incomes.map(item => item.amount))}\r\n                            </p>\r\n                            <p>\r\n                                Rs{Math.max(...incomes.map(item => item.amount))}\r\n                            </p>\r\n                        </div>\r\n                        <h2 className=\"salary-title\">Min <span>Expense</span>Max</h2>\r\n                        <div className=\"salary-item\">\r\n                            <p>\r\n                                Rs{Math.min(...expenses.map(item => item.amount))}\r\n                            </p>\r\n                            <p>\r\n                                Rs{Math.max(...expenses.map(item => item.amount))}\r\n                            </p>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className='prediction-con'>\r\n                    \r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </InnerLayout>\r\n        </DashboardStyled>\r\n    )\r\n}\r\n\r\nconst DashboardStyled = styled.div`\r\n    .stats-con{\r\n        display: grid;\r\n        grid-template-columns: repeat(5, 1fr);\r\n        gap: 2rem;\r\n        .chart-con{\r\n            grid-column: 1 / 4;\r\n            height: 400px;\r\n            .amount-con{\r\n                display: grid;\r\n                grid-template-columns: repeat(4, 1fr);\r\n                gap: 2rem;\r\n                margin-top: 2rem;\r\n                .income, .expense{\r\n                    grid-column: span 2;\r\n                }\r\n                .income, .expense, .balance{\r\n                    background: #FCF6F9;\r\n                    border: 2px solid #FFFFFF;\r\n                    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n                    border-radius: 20px;\r\n                    padding: 1rem;\r\n                    p{\r\n                        font-size: 3.5rem;\r\n                        font-weight: 700;\r\n                    }\r\n                }\r\n\r\n                .balance{\r\n                    grid-column: 2 / 4;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    p{\r\n                        color: var(--color-green);\r\n                        opacity: 0.6;\r\n                        font-size: 4.5rem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .history-con{\r\n            grid-column: 4 / -1;\r\n            h2{\r\n                margin: 1rem 0;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n            }\r\n            .salary-title{\r\n                font-size: 1.2rem;\r\n                span{\r\n                    font-size: 1.8rem;\r\n                }\r\n            }\r\n            .salary-item{\r\n                background: #FCF6F9;\r\n                border: 2px solid #FFFFFF;\r\n                box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n                padding: 1rem;\r\n                border-radius: 20px;\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                p{\r\n                    font-weight: 600;\r\n                    font-size: 1.6rem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Dashboard","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Login\\login.js",["160","161"],[],"import {useGlobalContext} from \"../../context/globalContext\";\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\nfunction Login() {\r\n\r\n    const {addIncome, getIncomes,login, error, setError} = useGlobalContext()\r\n    const [inputState, setInputState] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { email, password } = inputState;\r\n\r\n    const handleInput = name => e => {\r\n        setInputState({...inputState, [name]: e.target.value})\r\n        setError('')\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        login(inputState)\r\n        setInputState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n    return (\r\n        <FormStyled onSubmit={handleSubmit}>\r\n        {error && <p className='error'>{error}</p>}\r\n        <div className=\"input-control\">\r\n            <input \r\n                type=\"email\" \r\n                value={email}\r\n                name={'email'} \r\n                placeholder=\"Email\"\r\n                onChange={handleInput('email')}\r\n            />\r\n        </div>\r\n        <div className=\"input-control\">\r\n            <input value={password}  \r\n                type=\"password\" \r\n                name={'password'} \r\n                placeholder={'Password'}\r\n                onChange={handleInput('password')} \r\n            />\r\n        </div>\r\n           \r\n        <div className=\"submit-btn\">\r\n                <Button \r\n                    name={'Register'}\r\n                    icon={plus}\r\n                    bPad={'.8rem 1.6rem'}\r\n                    bRad={'30px'}\r\n                    bg={'var(--color-accent'}\r\n                    color={'#fff'}\r\n                />\r\n            </div>\r\n        </FormStyled>\r\n    )\r\n}\r\nconst FormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    input, textarea, select{\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 2px solid #fff;\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n        &::placeholder{\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n    .input-control{\r\n        input{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .selects{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        select{\r\n            color: rgba(34, 34, 96, 0.4);\r\n            &:focus, &:active{\r\n                color: rgba(34, 34, 96, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit-btn{\r\n        button{\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n            &:hover{\r\n                background: var(--color-green) !important;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Login\r\n","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Expenses\\Expenses.js",["162","163","164"],[],"import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\nimport Form from '../Form/Form';\r\nimport IncomeItem from '../IncomeItem/IncomeItem';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction Expenses() {\r\n    const {addIncome,expenses, getExpenses, deleteExpense, totalExpenses} = useGlobalContext()\r\n\r\n    useEffect(() =>{\r\n        getExpenses()\r\n    }, [])\r\n    return (\r\n        <ExpenseStyled>\r\n            <InnerLayout>\r\n                <h1>Expenses</h1>\r\n                <h2 className=\"total-income\">Total Expense: <span>Rs{totalExpenses()}</span></h2>\r\n                <div className=\"income-content\">\r\n                    <div className=\"form-container\">\r\n                        <ExpenseForm />\r\n                    </div>\r\n                    <div className=\"incomes\">\r\n                        {expenses.map((income) => {\r\n                            const {_id, title, amount, date, category, description, type} = income;\r\n                            console.log(income)\r\n                            return <IncomeItem\r\n                                key={_id}\r\n                                id={_id} \r\n                                title={title} \r\n                                description={description} \r\n                                amount={amount} \r\n                                date={date} \r\n                                type={type}\r\n                                category={category} \r\n                                indicatorColor=\"var(--color-green)\"\r\n                                deleteItem={deleteExpense}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </InnerLayout>\r\n        </ExpenseStyled>\r\n    )\r\n}\r\n\r\nconst ExpenseStyled = styled.div`\r\n    display: flex;\r\n    overflow: auto;\r\n    .total-income{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: #FCF6F9;\r\n        border: 2px solid #FFFFFF;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        border-radius: 20px;\r\n        padding: 1rem;\r\n        margin: 1rem 0;\r\n        font-size: 2rem;\r\n        gap: .5rem;\r\n        span{\r\n            font-size: 2.5rem;\r\n            font-weight: 800;\r\n            color: var(--color-green);\r\n        }\r\n    }\r\n    .income-content{\r\n        display: flex;\r\n        gap: 2rem;\r\n        .incomes{\r\n            flex: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Expenses","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Income\\Income.js",["165","166"],[],"import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\nimport Form from '../Form/Form';\r\nimport IncomeItem from '../IncomeItem/IncomeItem';\r\n\r\n\r\nfunction Income() {\r\n    const {addIncome,incomes, getIncomes, deleteIncome, totalIncome} = useGlobalContext()\r\n\r\n    useEffect(() =>{\r\n        getIncomes()\r\n    }, [])\r\n    return (\r\n        <IncomeStyled>\r\n            <InnerLayout>\r\n                <h1>Incomes</h1>\r\n                <h2 className=\"total-income\">Total Income: <span>Rs{totalIncome()}</span></h2>\r\n                <div className=\"income-content\">\r\n                    <div className=\"form-container\">\r\n                        <Form />\r\n                    </div>\r\n                    <div className=\"incomes\">\r\n                        {incomes.map((income) => {\r\n                            const {_id, title, amount, date, category, description, type} = income;\r\n                            return <IncomeItem\r\n                                key={_id}\r\n                                id={_id} \r\n                                title={title} \r\n                                description={description} \r\n                                amount={amount} \r\n                                date={date} \r\n                                type={type}\r\n                                category={category} \r\n                                indicatorColor=\"var(--color-green)\"\r\n                                deleteItem={deleteIncome}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n            </InnerLayout>\r\n        </IncomeStyled>\r\n    )\r\n}\r\n\r\nconst IncomeStyled = styled.div`\r\n    display: flex;\r\n    overflow: auto;\r\n    .total-income{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: #FCF6F9;\r\n        border: 2px solid #FFFFFF;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        border-radius: 20px;\r\n        padding: 1rem;\r\n        margin: 1rem 0;\r\n        font-size: 2rem;\r\n        gap: .5rem;\r\n        span{\r\n            font-size: 2.5rem;\r\n            font-weight: 800;\r\n            color: var(--color-green);\r\n        }\r\n    }\r\n    .income-content{\r\n        display: flex;\r\n        gap: 2rem;\r\n        .incomes{\r\n            flex: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Income","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Registration\\Registration.js",["167"],[],"import React, { useState } from 'react'\r\nimport {useGlobalContext } from '../../context/globalContext';\r\nimport styled from 'styled-components'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\nfunction Registration() {\r\n     const {register, error, setError} = useGlobalContext()\r\n    const [inputState, setInputState] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        mobilenumber: '',\r\n       email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { firstname, lastname, mobilenumber, email, password } = inputState;\r\n\r\n    const handleInput = name => e => {\r\n        setInputState({...inputState, [name]: e.target.value})\r\n        setError('')\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        register(inputState)\r\n        setInputState({\r\n            firstname: '',\r\n            lastname: '',\r\n            mobilenumber: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n    return (\r\n        <FormStyled onSubmit={handleSubmit}>\r\n        {error && <p className='error'>{error}</p>}\r\n        <div className=\"input-control\">\r\n            <input \r\n                type=\"text\" \r\n                value={firstname}\r\n                name={'firstname'} \r\n                placeholder=\"FirstName\"\r\n                onChange={handleInput('firstname')}\r\n            />\r\n        </div>\r\n        <div className=\"input-control\">\r\n            <input value={lastname}  \r\n                type=\"text\" \r\n                name={'lastname'} \r\n                placeholder={'Last Name'}\r\n                onChange={handleInput('lastname')} \r\n            />\r\n        </div>\r\n        <div className=\"input-control\">\r\n            <input value={mobilenumber}  \r\n                type=\"number\" \r\n                name={'mobilenumber'} \r\n                placeholder={'MobileNumber'}\r\n                onChange={handleInput('mobilenumber')} \r\n            />\r\n        </div>\r\n        <div className=\"input-control\">\r\n            <input value={email}  \r\n                type=\"email\" \r\n                name={'email'} \r\n                placeholder={'Email'}\r\n                onChange={handleInput('email')} \r\n            />\r\n        </div>\r\n        <div className=\"input-control\">\r\n            <input value={password}  \r\n                type=\"password\" \r\n                name={'password'} \r\n                placeholder={'Password'}\r\n                onChange={handleInput('password')} \r\n            />\r\n        </div>\r\n        <div className=\"submit-btn\">\r\n                <Button \r\n                    name={'Register'}\r\n                    icon={plus}\r\n                    bPad={'.8rem 1.6rem'}\r\n                    bRad={'30px'}\r\n                    bg={'var(--color-accent'}\r\n                    color={'#fff'}\r\n                />\r\n            </div>\r\n        </FormStyled>\r\n    )\r\n}\r\nconst FormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    input, textarea, select{\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 2px solid #fff;\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n        &::placeholder{\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n    .input-control{\r\n        input{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .selects{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        select{\r\n            color: rgba(34, 34, 96, 0.4);\r\n            &:focus, &:active{\r\n                color: rgba(34, 34, 96, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit-btn{\r\n        button{\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n            &:hover{\r\n                background: var(--color-green) !important;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Registration","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Expenses\\ExpenseForm.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\useWindowSize.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\menuItems.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\History\\History.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\Icons.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Chart\\Chart.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Button\\Button.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Predict\\Prediction.js",["168","169"],[],"import { useEffect, useState } from \"react\";\r\nimport { useGlobalContext } from \"../../context/globalContext\";\r\nimport styled from 'styled-components'\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\nfunction Prediction() {\r\n\r\n    const { monthlyincome, monthlyexpense, monthlyIncome, monthlyExpense, predict, predictedValue } = useGlobalContext();\r\n    const [inputState, setInputState] = useState({\r\n        test: ''\r\n    })\r\n    const [show, setShow] = useState(false)\r\n    useEffect(() => {\r\n        monthlyIncome()\r\n        monthlyExpense()\r\n    }, [])\r\nconst {test} = inputState;\r\n    const handleInput =name => e => {\r\n      setInputState({...inputState, [name]:e.target.value}) \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n       \r\n        e.preventDefault()\r\n        console.log(test)\r\n        predict(inputState) \r\n       setInputState({\r\n        test: ''\r\n       })\r\n        setShow(true)\r\n    }\r\n    return (\r\n        <>\r\n            <PredictionStyle>\r\n                <div className=\"past-summarization\">\r\n                    <div className=\"income-past\">\r\n                        <h2>\r\n                            Total Incomes In Past Months\r\n                        </h2>\r\n                        <div className=\"content\" >\r\n                            {\r\n                                monthlyincome.map((income) => {\r\n                                    const { _id, totalAmount } = income;\r\n                                    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n                                    const monthName = monthNames[_id.month - 1];\r\n                                    return (\r\n                                        <div className=\"inner-content\" key={`${_id.month}-${_id.year}`}>\r\n                                            <h5>{`${monthName},${_id.year}`}</h5>\r\n                                            <p>Rs {totalAmount}</p>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"expense-past\">\r\n                        <h2>\r\n                            Total Expenses In Past Months\r\n                        </h2>\r\n                        <div className=\"content\" >\r\n                            {\r\n                                monthlyexpense.map((expense) => {\r\n                                    const { _id, totalAmount } = expense;\r\n                                    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n                                    const monthName = monthNames[_id.month - 1];\r\n                                    return (\r\n                                        <div className=\"inner-content\" key={`${_id.month}-${_id.year}`}>\r\n                                            <h5>{`${monthName},${_id.year}`}</h5>\r\n                                            <p>Rs {totalAmount}</p>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"predict\">\r\n                        <h2>\r\n                            Make Prediction\r\n                        </h2>\r\n                        <div className=\"form\">\r\n                           <form onSubmit={handleSubmit}>\r\n                           <div className=\"input-control\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={test}\r\n                                    name={'test'}\r\n                                    placeholder={'Enter your salary'}\r\n                                    onChange={handleInput('test')}\r\n                                />\r\n                            </div>\r\n                            <div className=\"submit-btn\">\r\n                                <Button onClick={handleSubmit}\r\n                                    name={'Click'}\r\n                                    icon={plus}\r\n                                    bPad={'.8rem 1.6rem'}\r\n                                    bRad={'30px'}\r\n                                    bg={'var(--color-accent'}\r\n                                    color={'#fff'}\r\n                                />\r\n                            </div>\r\n                          <div><p>Your expected expense for next month is {parseInt(predictedValue)}</p></div>\r\n                           </form>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PredictionStyle>\r\n        </>\r\n    );\r\n}\r\nconst PredictionStyle = styled.div`\r\n.income-past, .expense, .balance{\r\n    background: #FCF6F9;\r\n    border: 2px solid #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    border-radius: 20px;\r\n    padding: 1rem;\r\n    p{\r\n        font-size: 3.5rem;\r\n        font-weight: 700;\r\n    }\r\n    input, textarea, select{\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 2px solid #fff;\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n        &::placeholder{\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n    .input-control{\r\n        input{\r\n            width: 100%;\r\n        }\r\n    }\r\n}\r\n`\r\nexport default Prediction;","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\IncomeItem\\IncomeItem.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\Form\\Form.js",["170"],[],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\n\r\nfunction Form() {\r\n    const {addIncome, getIncomes, error, setError} = useGlobalContext()\r\n    const [inputState, setInputState] = useState({\r\n        title: '',\r\n        amount: '',\r\n        date: '',\r\n        category: '',\r\n        description: '',\r\n    })\r\n\r\n    const { title, amount, date, category,description } = inputState;\r\n\r\n    const handleInput = name => e => {\r\n        setInputState({...inputState, [name]: e.target.value})\r\n        setError('')\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        addIncome(inputState)\r\n        setInputState({\r\n            title: '',\r\n            amount: '',\r\n            date: '',\r\n            category: '',\r\n            description: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FormStyled onSubmit={handleSubmit}>\r\n            {error && <p className='error'>{error}</p>}\r\n            <div className=\"input-control\">\r\n                <input \r\n                    type=\"text\" \r\n                    value={title}\r\n                    name={'title'} \r\n                    placeholder=\"Salary Title\"\r\n                    onChange={handleInput('title')}\r\n                />\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <input value={amount}  \r\n                    type=\"text\" \r\n                    name={'amount'} \r\n                    placeholder={'Salary Amount'}\r\n                    onChange={handleInput('amount')} \r\n                />\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <DatePicker \r\n                    id='date'\r\n                    placeholderText='Enter A Date'\r\n                    selected={date}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    onChange={(date) => {\r\n                        setInputState({...inputState, date: date})\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"selects input-control\">\r\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\r\n                    <option value=\"\"  disabled >Select Option</option>\r\n                    <option value=\"salary\">Salary</option>\r\n                    <option value=\"freelancing\">Freelancing</option>\r\n                    <option value=\"investments\">Investiments</option>\r\n                    <option value=\"stocks\">Stocks</option>\r\n                    <option value=\"bitcoin\">Bitcoin</option>\r\n                    <option value=\"bank\">Bank Transfer</option>  \r\n                    <option value=\"youtube\">Youtube</option>  \r\n                    <option value=\"other\">Other</option>  \r\n                </select>\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <textarea name=\"description\" value={description} placeholder='Add A Reference' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\r\n            </div>\r\n            <div className=\"submit-btn\">\r\n                <Button \r\n                    name={'Add Income'}\r\n                    icon={plus}\r\n                    bPad={'.8rem 1.6rem'}\r\n                    bRad={'30px'}\r\n                    bg={'var(--color-accent'}\r\n                    color={'#fff'}\r\n                />\r\n            </div>\r\n        </FormStyled>\r\n    )\r\n}\r\n\r\n\r\nconst FormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    input, textarea, select{\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 2px solid #fff;\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n        &::placeholder{\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n    .input-control{\r\n        input{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .selects{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        select{\r\n            color: rgba(34, 34, 96, 0.4);\r\n            &:focus, &:active{\r\n                color: rgba(34, 34, 96, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit-btn{\r\n        button{\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n            &:hover{\r\n                background: var(--color-green) !important;\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport default Form","C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\utils\\dateFormat.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\common\\Header.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\homepage\\notification.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\homepage\\dashboard_card.js",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\common\\Notification.jsx",[],[],"C:\\Users\\Pancha ratna\\Desktop\\Git\\expense_tracker-1\\frontend\\src\\Components\\homepage\\homepage.js",[],[],[],{"ruleId":"171","severity":1,"message":"172","line":32,"column":15,"nodeType":"173","messageId":"174","endLine":32,"endColumn":23},{"ruleId":"171","severity":1,"message":"175","line":52,"column":11,"nodeType":"173","messageId":"174","endLine":52,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":53,"column":15,"nodeType":"173","messageId":"174","endLine":53,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":59,"column":15,"nodeType":"173","messageId":"174","endLine":59,"endColumn":23},{"ruleId":"171","severity":1,"message":"176","line":73,"column":15,"nodeType":"173","messageId":"174","endLine":73,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":89,"column":15,"nodeType":"173","messageId":"174","endLine":89,"endColumn":23},{"ruleId":"171","severity":1,"message":"176","line":103,"column":15,"nodeType":"173","messageId":"174","endLine":103,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":17,"column":8,"nodeType":"179","endLine":17,"endColumn":10,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"181","line":10,"column":12,"nodeType":"173","messageId":"174","endLine":10,"endColumn":21},{"ruleId":"171","severity":1,"message":"182","line":10,"column":23,"nodeType":"173","messageId":"174","endLine":10,"endColumn":33},{"ruleId":"171","severity":1,"message":"183","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":12},{"ruleId":"171","severity":1,"message":"181","line":10,"column":12,"nodeType":"173","messageId":"174","endLine":10,"endColumn":21},{"ruleId":"177","severity":1,"message":"184","line":14,"column":8,"nodeType":"179","endLine":14,"endColumn":10,"suggestions":"185"},{"ruleId":"171","severity":1,"message":"181","line":10,"column":12,"nodeType":"173","messageId":"174","endLine":10,"endColumn":21},{"ruleId":"177","severity":1,"message":"186","line":14,"column":8,"nodeType":"179","endLine":14,"endColumn":10,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"188","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":18},{"ruleId":"171","severity":1,"message":"189","line":13,"column":12,"nodeType":"173","messageId":"174","endLine":13,"endColumn":16},{"ruleId":"177","severity":1,"message":"190","line":17,"column":8,"nodeType":"179","endLine":17,"endColumn":10,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"182","line":11,"column":23,"nodeType":"173","messageId":"174","endLine":11,"endColumn":33},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'getloggedInUser' is assigned a value but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExpenses' and 'getIncomes'. Either include them or remove the dependency array.","ArrayExpression",["192"],"'addIncome' is assigned a value but never used.","'getIncomes' is assigned a value but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["194"],"'DatePicker' is defined but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'monthlyExpense' and 'monthlyIncome'. Either include them or remove the dependency array.",["195"],{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [getExpenses, getIncomes]",{"range":"204","text":"205"},"Update the dependencies array to be: [getExpenses]",{"range":"206","text":"207"},"Update the dependencies array to be: [getIncomes]",{"range":"208","text":"209"},"Update the dependencies array to be: [monthlyExpense, monthlyIncome]",{"range":"210","text":"211"},[657,659],"[getExpenses, getIncomes]",[503,505],"[getExpenses]",[455,457],"[getIncomes]",[590,592],"[monthlyExpense, monthlyIncome]"]