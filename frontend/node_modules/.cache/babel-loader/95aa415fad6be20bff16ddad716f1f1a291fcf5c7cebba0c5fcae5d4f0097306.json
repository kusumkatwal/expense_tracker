{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusum\\\\Documents\\\\7thsemester\\\\expense_tracker\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Algorithm\\\\linear_regression.js\",\n  _s = $RefreshSig$();\nimport { useGlobalContext } from '../context/globalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Algorithm = () => {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  // var value = incomes.amount;\n  var x_train;\n  function make_prediction(incomes, expenses) {\n    x_train = incomes.map(income => income.amount);\n    // console.log(x_train);\n    const y_train = expenses.map(record => record.amount);\n    //console.log(y_train);\n\n    const [intercept, slope] = coefficient(x_train, y_train);\n    // console.log(intercept);\n    // console.log(slope)\n    //const x_test = test.map((record) => record['total savings accumulated over time']);\n    const y_pred = intercept + 30000 * slope;\n    console.log('the predicted val is ' + y_pred.toFixed(2));\n    return y_pred;\n  }\n  const coefficient = (x, y) => {\n    const x_mean = mean(x);\n    const y_mean = mean(y);\n    const x_variance = variance(x, x_mean); //x-mean\n    const co_variance = covariance(x, x_mean, y, y_mean);\n    //console.log(co_variance)\n\n    var slope = co_variance / x_variance;\n    var intercept = y_mean - slope * x_mean;\n    //console.log(slope)\n    // console.log(intercept)\n\n    return [intercept, slope];\n  };\n  const mean = X => {\n    var sum = 0;\n    for (var i = 0; i < X.length; i++) {\n      sum += X[i];\n    }\n    return sum / X.length;\n  };\n  const variance = (X, m) => {\n    var sumOfSquares = 0;\n    for (var i = 0; i < X.length; i++) {\n      sumOfSquares += (X[i] - m) ** 2;\n    }\n    var meanVariance = sumOfSquares / X.length;\n    // console.log(meanVariance);\n    return meanVariance;\n  };\n  const covariance = (x, m1, y, m2) => {\n    var result = 0;\n    for (var i = 0; i < x.length; i++) {\n      var a = x[i] - m1;\n      var b = y[i] - m2;\n      var mul = a * b;\n      console.log(a);\n      result += mul;\n    }\n    var mean_result = result / x.length;\n    // console.log(result);\n    return mean_result;\n  };\n  const pred = make_prediction(incomes, expenses);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Predicted value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: pred\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_s(Algorithm, \"FD0wmpS8gvIkX+imi80kDHo7xkc=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Algorithm;\nexport default Algorithm;\nvar _c;\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"names":["useGlobalContext","Algorithm","incomes","expenses","x_train","make_prediction","map","income","amount","y_train","record","intercept","slope","coefficient","y_pred","console","log","toFixed","x","y","x_mean","mean","y_mean","x_variance","variance","co_variance","covariance","X","sum","i","length","m","sumOfSquares","meanVariance","m1","m2","result","a","b","mul","mean_result","pred"],"sources":["C:/Users/kusum/Documents/7thsemester/expense_tracker/expense-tracker_fullstack/frontend/src/Algorithm/linear_regression.js"],"sourcesContent":["import { useGlobalContext } from '../context/globalContext';\r\n\r\nconst Algorithm = () => {\r\n    const {incomes, expenses} = useGlobalContext();\r\n    // var value = incomes.amount;\r\n    var x_train;\r\n\r\n    function make_prediction(incomes, expenses) {\r\n        x_train = incomes.map((income) => income.amount);\r\n       // console.log(x_train);\r\n        const y_train = expenses.map((record) => record.amount);\r\n        //console.log(y_train);\r\n    \r\n        const [intercept, slope] = coefficient(x_train, y_train);\r\n        // console.log(intercept);\r\n        // console.log(slope)\r\n        //const x_test = test.map((record) => record['total savings accumulated over time']);\r\n        const y_pred = (intercept + 30000 * slope);\r\n        console.log('the predicted val is ' + y_pred.toFixed(2));\r\n    \r\n        return y_pred;\r\n    }\r\n    \r\n    const coefficient = (x, y) => {\r\n        const x_mean = mean(x);\r\n        const y_mean = mean(y);\r\n        const x_variance = variance(x, x_mean);     //x-mean\r\n        const co_variance = covariance(x, x_mean, y, y_mean);\r\n       //console.log(co_variance)\r\n    \r\n        var slope = co_variance / x_variance;\r\n        var intercept = y_mean - slope * x_mean;\r\n        //console.log(slope)\r\n        // console.log(intercept)\r\n    \r\n        return [intercept, slope];\r\n    \r\n    }\r\n    \r\n    const mean = (X) => {\r\n        var sum = 0;\r\n        for (var i = 0; i < X.length; i++) {\r\n            sum += X[i];\r\n        }\r\n        return (sum / X.length);\r\n    }\r\n\r\n    const variance = (X, m) => {\r\n        var sumOfSquares=0;\r\n        for (var i = 0; i < X.length; i++) {\r\n           sumOfSquares += (X[i] - m) ** 2;\r\n        }\r\n        var meanVariance = sumOfSquares/X.length;\r\n        // console.log(meanVariance);\r\n        return (meanVariance);\r\n    }\r\n    \r\n    const covariance = (x, m1, y, m2) => {\r\n        var result = 0;\r\n        for (var i = 0; i < x.length; i++) {\r\n            var a = x[i] - m1;\r\n            var b = y[i] - m2;\r\n            var mul = a * b;\r\n            console.log(a)\r\n            result += mul;\r\n        }\r\n    var mean_result = result/x.length;\r\n    // console.log(result);\r\n        return (mean_result);\r\n    }\r\n   const pred= make_prediction(incomes,expenses)\r\n    return ( \r\n        <>\r\n        <h1>Predicted value</h1>\r\n       <p>{pred}</p>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\nexport default Algorithm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}